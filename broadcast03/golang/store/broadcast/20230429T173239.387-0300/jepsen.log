2023-04-29 17:32:39,424{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 16d8edfad7fa9fe2a77b222c22b10b195885b3a8 (plus uncommitted changes)
2023-04-29 17:32:39,424{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin ./broadcast --node-count 5 --time-limit 20 --rate 10
2023-04-29 17:32:39,475{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 5
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x78167"
         "maelstrom.db$db$reify__16142@78167"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x469caf69" "2023-04-29T17:32:39.387-03:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x5e05064b"
         "maelstrom.net$jepsen_net$reify__15251@5e05064b"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x527e6bd3"
         "maelstrom.workload.broadcast$client$reify__16644@527e6bd3"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x4867e76b"
         "java.util.concurrent.CyclicBarrier@4867e76b"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x6ba3eee9"
         "jepsen.checker$compose$reify__11881@6ba3eee9"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "./broadcast"
  "--node-count"
  "5"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@1d628a88"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@3c634a04"]})
 :nodes ["n0" "n1" "n2" "n3" "n4"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./broadcast"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x3b42d7df"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@3b42d7df"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x1660bba7"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@1660bba7"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 1,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x49e3b86b"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@49e3b86b"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x64b262a7"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@64b262a7"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x771c4015"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x34d776eb"
         "maelstrom.net$jepsen_os$reify__15254@34d776eb"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-04-29 17:32:40,344{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-04-29 17:32:40,345{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-04-29 17:32:40,346{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-04-29 17:32:40,347{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2023-04-29 17:32:40,347{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2023-04-29 17:32:40,347{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2023-04-29 17:32:40,347{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./broadcast []
2023-04-29 17:32:40,347{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./broadcast []
2023-04-29 17:32:40,347{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2023-04-29 17:32:40,348{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./broadcast []
2023-04-29 17:32:40,348{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./broadcast []
2023-04-29 17:32:40,348{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-04-29 17:32:40,350{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-04-29 17:32:40,350{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./broadcast []
2023-04-29 17:32:40,368{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-04-29 17:32:40,379{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2023-04-29 17:32:40,382{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[]
2023-04-29 17:32:40,459{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2023-04-29 17:32:40,460{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	[]
2023-04-29 17:32:40,650{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2023-04-29 17:32:40,654{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[]
2023-04-29 17:32:40,677{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2023-04-29 17:32:40,679{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[]
2023-04-29 17:32:40,784{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2023-04-29 17:32:40,787{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[]
2023-04-29 17:32:40,818{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2023-04-29 17:32:40,819{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[]
2023-04-29 17:32:41,019{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2023-04-29 17:32:41,021{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[]
2023-04-29 17:32:41,109{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2023-04-29 17:32:41,111{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	[]
2023-04-29 17:32:41,295{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2023-04-29 17:32:41,297{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[]
2023-04-29 17:32:41,489{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2023-04-29 17:32:41,492{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[]
2023-04-29 17:32:41,645{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	0
2023-04-29 17:32:41,649{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	0
2023-04-29 17:32:41,722{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2023-04-29 17:32:41,725{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[]
2023-04-29 17:32:41,753{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	1
2023-04-29 17:32:41,755{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	1
2023-04-29 17:32:41,760{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	2
2023-04-29 17:32:41,762{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	2
2023-04-29 17:32:41,828{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	3
2023-04-29 17:32:41,829{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	3
2023-04-29 17:32:41,899{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	4
2023-04-29 17:32:41,901{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	4
2023-04-29 17:32:41,996{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2023-04-29 17:32:41,998{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[0 0 1 2 0 1 4]
2023-04-29 17:32:42,049{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	5
2023-04-29 17:32:42,051{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	5
2023-04-29 17:32:42,193{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	6
2023-04-29 17:32:42,195{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	6
2023-04-29 17:32:42,216{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	7
2023-04-29 17:32:42,217{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	7
2023-04-29 17:32:42,281{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	8
2023-04-29 17:32:42,283{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	8
2023-04-29 17:32:42,416{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2023-04-29 17:32:42,417{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[0 1 4 1 0 1 2 0 1 4 5 1 0 1 2 0 1 4 5 6]
2023-04-29 17:32:42,460{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	9
2023-04-29 17:32:42,462{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	9
2023-04-29 17:32:42,633{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	10
2023-04-29 17:32:42,636{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	10
2023-04-29 17:32:42,687{GMT}	INFO	[Jepsen shutdown hook] jepsen.core: Downloading DB logs before JVM shutdown...
